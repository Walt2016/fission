/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/index.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/color.js":
/*!**********************!*\
  !*** ./src/color.js ***!
  \**********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\nvar regObj = {\r\n    hex: /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/,\r\n    hex3: /^#([0-9a-fA-f]{3})$/,\r\n    hex6: /^#([0-9a-fA-f]{6})$/,\r\n    rgba: /^[rR][gG][Bb][Aa]?[\\(]([\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?),){2}[\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?),?[\\s]*(0\\.\\d{1,2}|1|0)?[\\)]{1}$/g\r\n}\r\n//#fff #ffffff\r\nvar isHex = function (color) {\r\n    return /^#([0-9a-fA-f]{3}|[0-9a-fA-f]{6})$/.test(color);\r\n};\r\n//#fff\r\nvar isHex3 = function (color) {\r\n    return /^#([0-9a-fA-f]{3})$/.test(color);\r\n};\r\n//#ffffff\r\nvar isHex6 = function (color) {\r\n    return /^#([0-9a-fA-f]{6})$/.test(color);\r\n};\r\nvar isRgba = function (color) {\r\n    return /^[rR][gG][Bb][Aa]?[\\(]([\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?),){2}[\\s]*(2[0-4][0-9]|25[0-5]|[01]?[0-9][0-9]?),?[\\s]*(0\\.\\d{1,2}|1|0)?[\\)]{1}$/g.test(color)\r\n};\r\n\r\nvar rgbaWrapper = function (rgbaArr) { //[1,1,1,1]\r\n    return (rgbaArr.length === 4 ? 'rgba(' : 'rgb(') + rgbaArr + ')'\r\n};\r\nvar rgbaArr = function (color) { //rgba(0,0,0,0.1)\r\n    if (isRgba(color)) {\r\n        return color.match(/0\\.\\d{1,2}|\\d{1,3}/g).map(function (t) {\r\n            return +t;\r\n        })\r\n    } else if (isHex(color)) {\r\n        if (color.length === 4) { //#fff\r\n            return color.match(/[0-9a-fA-f]{1}/g).map(function (t) {\r\n                return '0x' + t + t << 0\r\n            })\r\n        } else { //#ffffff\r\n            return color.match(/[0-9a-fA-f]{2}/g).map(function (t) {\r\n                return '0x' + t << 0\r\n            })\r\n        }\r\n    } else if (_.isArray(color)) {\r\n        return color;\r\n    } else if (_.isNumber(color)) {\r\n        color &= 0xFFFFFF;\r\n        return [\r\n            (color >> 16) & 0xFF,\r\n            (color >> 8) & 0xFF,\r\n            color & 0xFF,\r\n        ];\r\n    }\r\n};\r\nvar _max = function (arr) {\r\n    return Math.max.apply(Math, arr)\r\n}\r\nvar _min = function (arr) {\r\n    return Math.min.apply(Math, arr)\r\n}\r\n\r\n//rgb2hex\r\nvar hex = function (color) {\r\n    if (!color) return;\r\n    if (isHex6(color)) return color;\r\n    if (isHex3(color)) {\r\n        return color.replace(/[0-9a-fA-f]/g, function (m) {\r\n            return m + m;\r\n        });\r\n    }\r\n\r\n    function _hex(rgbaArr) {\r\n        return \"#\" + rgbaArr.map(function (t, i) {\r\n            return i > 2 ? null : ('0' + (+t).toString(16)).slice(-2);\r\n        }).join(\"\")\r\n    }\r\n    return _hex(rgbaArr(color))\r\n};\r\n//hex2rgb\r\nvar rgb = function (color, alpha) {\r\n    if (!color) return;\r\n    if (isRgba(color)) return color;\r\n    var arr = rgbaArr(color);\r\n    if (alpha) arr[3] = alpha;\r\n    return rgbaWrapper(arr);\r\n};\r\n\r\n//深色  随机深色(rgb两位小于 80)，指定颜色加深\r\nvar dark = function (color, level) {\r\n    color = rgbaArr(color)\r\n    level = level || 0.5;\r\n    return rgbaWrapper(color.map(function (t) {\r\n        return t * (1 - level) << 0\r\n    }))\r\n}\r\nvar deepdark = function (color) {\r\n    return dark(color, 0.1);\r\n}\r\n\r\nvar hsla = function () {\r\n    return \"hsla(\" + [Math.random() * 360 << 0] + \",50%,50%,0.5)\";\r\n}\r\nvar hsl = function () { //微信小程序不支持hsl\r\n    // return \"hsl(\" + [Math.random() * 360 << 0] + \",50%,50%)\";\r\n    var r, g, b, cc = this.color.map(function (t, i) {\r\n            t /= 255\r\n            if (i === 0)\r\n                r = t;\r\n            else if (i === 1)\r\n                g = t;\r\n            else(i === 2)\r\n            b = t;\r\n            return t\r\n        }),\r\n        max = _max(cc),\r\n        min = _min(cc),\r\n        l = (max + min) / 2,\r\n        s, h;\r\n    if (max === min) {\r\n        s = 0;\r\n        h = 0;\r\n    }\r\n    if (l < 0.5)\r\n        s = (max - min) / (max + min)\r\n    else\r\n        s = (max - min) / (2.0 - max - min)\r\n    if (r === max)\r\n        h = (g - b) / (max - min)\r\n    if (g === max)\r\n        h = 2.0 + (b - r) / (max - min)\r\n    if (b === max)\r\n        h = 4.0 + (r - g) / (max - min)\r\n    h = (h * 60 + 360) % 360\r\n    s = s * 100 + '%'\r\n    l = l * 100 + '%'\r\n    return 'hsl(' + [h, s, l] + ')'\r\n}\r\n\r\n//浅色  \r\nvar light = function (color, level) {\r\n    color = rgbaArr(color)\r\n    level = level || 0.5;\r\n    return rgbaWrapper(color.map(function (t) {\r\n        return t + (255 - t) * level << 0\r\n    }))\r\n}\r\n//透明度\r\nvar alpha = function (color, a) {\r\n    color = rgbaArr(color)\r\n    if (a) color[3] = a;\r\n    return rgbaWrapper(color);\r\n}\r\n\r\n//web安全色   \r\nvar webSafeColor = function (color) {\r\n    if (!color) {\r\n        //216个安全色\r\n        var arr = ['00', '33', '66', '99', 'CC', 'FF'],\r\n            len = arr.length,\r\n            colorArr = [];\r\n        for (var r = 0; r < len; r++)\r\n            for (var g = 0; g < len; g++)\r\n                for (var b = 0; b < len; b++)\r\n                    colorArr[colorArr.length] = '#' + arr[r] + arr[g] + arr[b];\r\n        return colorArr;\r\n    }\r\n\r\n    color = rgb(color)\r\n    color = rgbaArr(color)\r\n    //RGB值是51的倍数\r\n    for (var i = 0; i < 3; i++) {\r\n        var q1 = Math.floor(color[i] / 51) * 51;\r\n        var q2 = Math.ceil(color[i] / 51) * 51;\r\n        if (Math.abs(q1 - color[i]) <= Math.abs(q2 - color[i])) color[i] = q1;\r\n        else color[i] = q2;\r\n    }\r\n    return hex(rgbaWrapper(color));\r\n}\r\n\r\nvar _isUndefined = function (t) {\r\n    return t === undefined\r\n}\r\nvar _cos = function (t) {\r\n    return Math.cos(t * Math.PI / 180)\r\n}\r\n//色相环\r\nvar circle = function (len, alpha) {\r\n    var a = 0,\r\n        step = 360 / len,\r\n        arr = [],\r\n        r, g, b;\r\n    for (var i = 0; i < len; i++) {\r\n        a += step\r\n        r = _cos(a) * 127 + 128 << 0;\r\n        g = _cos(a + 120) * 127 + 128 << 0;\r\n        b = _cos(a + 240) * 127 + 128 << 0;\r\n        arr[arr.length] = rgbaWrapper(_isUndefined(alpha) ? [r, g, b] : [r, g, b, alpha]);\r\n    }\r\n    return arr;\r\n}\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    rgb,\r\n    hex,\r\n    dark,\r\n    deepdark,\r\n    hsla,\r\n    hsl,\r\n    alpha,\r\n    webSafeColor,\r\n    circle\r\n});\r\n\r\n// var Color = function (color, alpha) {\r\n//     if (!(this instanceof Color)) return new Color(color, alpha);\r\n//     // color = color || '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6); //\"#000\";\r\n//     if (isRgba(color) || isHex(color)) {\r\n//         this.color = rgbaArr(color);\r\n//     } else {\r\n//         //分类颜色\r\n//         //红 100\r\n//         //绿 010\r\n//         //青 001 \r\n//         //黄 110 \r\n//         //紫 101\r\n//         //全彩 111\r\n//         //黑白灰 000\r\n//         var colorMap = {\r\n//             red: [1, 0, 0],\r\n//             green: [0, 1, 0],\r\n//             syan: [0, 0, 1],\r\n//             yellow: [1, 1, 0],\r\n//             purple: [1, 0, 1],\r\n//             gray: [0, 0, 0],\r\n//             colorful: [1, 1, 1]\r\n//         }\r\n\r\n//         var arr = color in colorMap ? colorMap[color] : colorMap[\"colorful\"];\r\n//         var r = arr[0],\r\n//             g = arr[1],\r\n//             b = arr[2];\r\n//         if (r & g & b === 1) { //全彩\r\n//             arr = arr.map(function (t) {\r\n//                 return Math.random() * 255 << 0;\r\n//             });\r\n//         } else if (r & g & b === 0) { //灰\r\n//             var t = Math.random() * 255 << 0;\r\n//             arr = [t, t, t];\r\n//         } else {\r\n//             var rgb = 155;\r\n//             var c = (Math.random() * (255 - rgb) << 0) + rgb;\r\n//             arr = arr.map(function (t) {\r\n//                 return t === 1 ? (Math.random() * (255 - rgb) << 0) + rgb : Math.random() * (c / 2) << 0;\r\n//             });\r\n//         }\r\n//         if (alpha) arr[arr.length] = alpha;\r\n//         this.color = arr;\r\n//     }\r\n// }\r\n// return _.createClass(Color, {\r\n//         toString: function () {\r\n//             return rgbaWrapper(this.color);\r\n//         },\r\n//         hsla: function () {\r\n//             return \"hsla(\" + [Math.random() * 360 << 0] + \",50%,50%,0.5)\";\r\n//         },\r\n//         hsl: function () { //微信小程序不支持hsl\r\n//             // return \"hsl(\" + [Math.random() * 360 << 0] + \",50%,50%)\";\r\n//             var r, g, b, cc = this.color.map(function (t, i) {\r\n//                     t /= 255\r\n//                     if (i === 0)\r\n//                         r = t;\r\n//                     else if (i === 1)\r\n//                         g = t;\r\n//                     else(i === 2)\r\n//                     b = t;\r\n//                     return t\r\n//                 }),\r\n//                 max = _max(cc),\r\n//                 min = _min(cc),\r\n//                 l = (max + min) / 2,\r\n//                 s, h;\r\n//             if (max === min) {\r\n//                 s = 0;\r\n//                 h = 0;\r\n//             }\r\n//             if (l < 0.5)\r\n//                 s = (max - min) / (max + min)\r\n//             else\r\n//                 s = (max - min) / (2.0 - max - min)\r\n//             if (r === max)\r\n//                 h = (g - b) / (max - min)\r\n//             if (g === max)\r\n//                 h = 2.0 + (b - r) / (max - min)\r\n//             if (b === max)\r\n//                 h = 4.0 + (r - g) / (max - min)\r\n//             h = (h * 60 + 360) % 360\r\n//             s = s * 100 + '%'\r\n//             l = l * 100 + '%'\r\n//             return 'hsl(' + [h, s, l] + ')'\r\n//         },\r\n//         //深色  随机深色(rgb两位小于 80)，指定颜色加深\r\n//         dark: function (color, level) {\r\n//             color = color ? rgbaArr(color) : this.color;\r\n//             level = level || 0.5;\r\n//             return rgbaWrapper(color.map(function (t) {\r\n//                 return t * (1 - level) << 0\r\n//             }))\r\n//         },\r\n//         deepdark: function () {\r\n//             return this.dark(null, 0.1);\r\n//         },\r\n//         //浅色  \r\n//         light: function (color, level) {\r\n//             color = color ? rgbaArr(color) : this.color;\r\n//             level = level || 0.5;\r\n//             return rgbaWrapper(color.map(function (t) {\r\n//                 return t + (255 - t) * level << 0\r\n//             }))\r\n//         },\r\n//         //透明度\r\n//         alpha: function (a) {\r\n//             if (a) this.color[3] = a;\r\n//             return rgbaWrapper(this.color);\r\n//         },\r\n//         rgb: function (color, alpha) {\r\n//             if (!color) return this.alpha(alpha)\r\n//             return this.constructor.rgb(color, alpha)\r\n//         },\r\n//         //混合\r\n//         mix: function (color1, color2) {\r\n//             var args = Array.prototype.slice.call(arguments);\r\n//             args[args.length] = this.rgb();\r\n//             return this.constructor.mix(args);\r\n//         },\r\n//         //rgb2hex\r\n//         hex: function (color) {\r\n//             return this.constructor.hex(color || this.color);\r\n//         },\r\n//         //色相环\r\n//         circle: function (len) {\r\n//             return this.constructor.circle(len);\r\n//         },\r\n//         //互补色\r\n//         complementary: function (color) {\r\n//             return this.constructor.complementary(color || this.color);\r\n//         },\r\n//         //颜色过渡  gradient\r\n//         tween: function (color, step, easing) {\r\n//             return this.constructor.tween(this.color, color, step, easing)\r\n//         },\r\n//         // 灰度值的心理学公式  值越小越深 <192为深色\r\n//         grayLevel: function (color) {\r\n//             color = color ? rgbaArr(color) : this.color;\r\n//             return 0.30 * color[0] + 0.59 * color[1] + 0.11 * color[2]\r\n//         },\r\n//         isDark: function (color) {\r\n//             return this.grayLevel(color) < 192\r\n//         },\r\n//         isLight: function (color) {\r\n//             return !this.isDark(color)\r\n//         },\r\n//         //web安全色   \r\n//         webSafeColor: function (color) {\r\n//             if (!color) {\r\n//                 //216个安全色\r\n//                 var arr = ['00', '33', '66', '99', 'CC', 'FF'],\r\n//                     len = arr.length,\r\n//                     colorArr = [];\r\n//                 for (var r = 0; r < len; r++)\r\n//                     for (var g = 0; g < len; g++)\r\n//                         for (var b = 0; b < len; b++)\r\n//                             colorArr[colorArr.length] = '#' + arr[r] + arr[g] + arr[b];\r\n//                 return colorArr;\r\n//             }\r\n\r\n//             color = this.rgb(color)\r\n//             color = rgbaArr(color)\r\n//             //RGB值是51的倍数\r\n//             for (var i = 0; i < 3; i++) {\r\n//                 var q1 = Math.floor(color[i] / 51) * 51;\r\n//                 var q2 = Math.ceil(color[i] / 51) * 51;\r\n//                 if (Math.abs(q1 - color[i]) <= Math.abs(q2 - color[i])) color[i] = q1;\r\n//                 else color[i] = q2;\r\n//             }\r\n//             return this.hex(rgbaWrapper(color));\r\n//         }\r\n//     },\r\n//     //静态方法\r\n//     {\r\n//         //混合  [c1,c2,c3]  或  color1, color2 \r\n//         mix: function (colorArr) {\r\n//             if (_.isArray(colorArr)) {\r\n//                 var len = colorArr.length,\r\n//                     arr = new Array(len);\r\n//                 for (var i = 0; i < len; i++) {\r\n//                     arr[i] = rgbaArr(colorArr[i]);\r\n//                 }\r\n//                 var _mix = arr[0].map(function (t, i) {\r\n//                     if (i === 3) {\r\n//                         for (var j = 1; j < len; j++) {\r\n//                             t += _.isUndefined(arr[j][i]) ? 1 : arr[j][i];\r\n//                         }\r\n//                         return (t / len).toFixed(2);\r\n//                     } else {\r\n//                         for (var j = 1; j < len; j++) {\r\n//                             t += arr[j][i];\r\n//                         }\r\n//                         return t / len << 0\r\n//                     }\r\n//                 })\r\n//                 return rgbaWrapper(_mix);\r\n//             } else {\r\n//                 var len = arguments.length,\r\n//                     arr = [];\r\n//                 if (len === 0) return;\r\n//                 for (var i = 0; i < len; i++) {\r\n//                     arr[i] = rgbaArr(arguments[i]);\r\n//                 }\r\n//                 return this.mix.call(this, arr)\r\n//             }\r\n\r\n//         },\r\n//         //rgb2hex\r\n//         hex: function (color) {\r\n//             if (!color) return;\r\n//             if (isHex6(color)) return color;\r\n//             if (isHex3(color)) {\r\n//                 return color.replace(/[0-9a-fA-f]/g, function (m) {\r\n//                     return m + m;\r\n//                 });\r\n//             }\r\n\r\n//             function _hex(rgbaArr) {\r\n//                 return \"#\" + rgbaArr.map(function (t, i) {\r\n//                     return i > 2 ? null : ('0' + (+t).toString(16)).slice(-2);\r\n//                 }).join(\"\")\r\n//             }\r\n//             return _hex(rgbaArr(color))\r\n//         },\r\n//         //hex2rgb\r\n//         rgb: function (color, alpha) {\r\n//             if (!color) return;\r\n//             if (isRgba(color)) return color;\r\n//             var arr = rgbaArr(color);\r\n//             if (alpha) arr[3] = alpha;\r\n//             return rgbaWrapper(arr);\r\n//         },\r\n//         //互补色\r\n//         complementary: function (color) {\r\n//             var arr = rgbaArr(color),\r\n//                 max = _max(arr),\r\n//                 min = _min(arr),\r\n//                 sum = max + min;\r\n//             return rgbaWrapper(arr.map(function (t) {\r\n//                 return sum - t\r\n//             }));\r\n//         },\r\n//         //色相环\r\n//         circle: function (len, alpha) {\r\n//             var a = 0,\r\n//                 step = 360 / len,\r\n//                 arr = [],\r\n//                 r, g, b;\r\n//             for (var i = 0; i < len; i++) {\r\n//                 a += step\r\n//                 r = _.cos(a) * 127 + 128 << 0;\r\n//                 g = _.cos(a + 120) * 127 + 128 << 0;\r\n//                 b = _.cos(a + 240) * 127 + 128 << 0;\r\n//                 arr[arr.length] = rgbaWrapper(_.isUndefined(alpha) ? [r, g, b] : [r, g, b, alpha]);\r\n//             }\r\n//             return arr;\r\n//         },\r\n//         //颜色过渡  gradient\r\n//         tween: function (color1, color2, step, easing) {\r\n//             step = step || 1;\r\n//             easing = easing || \"linear\";\r\n//             var start = rgbaArr(color1),\r\n//                 end = rgbaArr(color2),\r\n//                 colorArr = [];\r\n//             for (var i = 0; i <= step; i++) {\r\n//                 var k = _.Easing[easing](i / step);\r\n//                 colorArr[colorArr.length] = rgbaWrapper(end.map(function (t, i) {\r\n//                     return i > 2 ? +(start[i] + (t - start[i]) * k).toFixed(2) : start[i] + (t - start[i]) * k << 0\r\n//                 }))\r\n//             }\r\n//             return colorArr;\r\n//         },\r\n//         //深色  随机深色(rgb两位小于 80)，指定颜色加深\r\n//         dark: function (level) {\r\n//             var n = Math.random() * 3 << 0;\r\n//             return rgbaWrapper([255, 255, 255].map(function (t, i) {\r\n//                 return i !== n ? Math.random() * 80 << 0 : t * Math.random() << 0;\r\n//             }));\r\n//         },\r\n//         deepdark: function () {\r\n//             var n = Math.random() * 3 << 0;\r\n//             return rgbaWrapper([255, 255, 255].map(function (t, i) {\r\n//                 return i !== n ? Math.random() * 20 << 0 : t * Math.random() << 0;\r\n//             }));\r\n//         },\r\n//         //浅色  \r\n//         light: function (level) {\r\n//             var n = Math.random() * 3 << 0;\r\n//             return rgbaWrapper([255, 255, 255].map(function (t, i) {\r\n//                 return i !== n ? 120 + Math.random() * 136 << 0 : t * Math.random() << 0;\r\n//             }));\r\n//         },\r\n//     })\n\n//# sourceURL=webpack:///./src/color.js?");

/***/ }),

/***/ "./src/config.js":
/*!***********************!*\
  !*** ./src/config.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n\r\n\r\n\r\nlet wrapperOptions = (function () {\r\n    var width = window.innerWidth ||\r\n        document.documentElement.clientWidth ||\r\n        document.body.clientWidth || 640;\r\n    var height = window.innerHeight ||\r\n        document.documentElement.clientHeight ||\r\n        document.body.clientHeight || 400;\r\n    return {\r\n        width,\r\n        height,\r\n        cx: width / 2,\r\n        cy: height / 2\r\n    }\r\n}())\r\nlet center = [wrapperOptions.cx, wrapperOptions.cy];\r\nlet words = ['stroke', 'fill', 'width'];\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    wrapperOptions,\r\n    center,\r\n    words\r\n});\n\n//# sourceURL=webpack:///./src/config.js?");

/***/ }),

/***/ "./src/filter.js":
/*!***********************!*\
  !*** ./src/filter.js ***!
  \***********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//反色\r\nfunction reverse(canvas) {\r\n    let ctx = canvas.getContext(\"2d\")\r\n    let cols = canvas.width;\r\n    let rows = canvas.height;\r\n    let imgData = ctx.getImageData(0, 0, cols, rows)\r\n    let data = imgData.data\r\n    var len = imgData.data.length;\r\n    for (var i = 0; i < len; i += 4) {\r\n        let r = data[i],\r\n            g = data[i + 1],\r\n            b = data[i + 2]\r\n\r\n        data[i] = 255 - r;\r\n        data[i + 1] = 255 - g;\r\n        data[i + 2] = 255 - b;\r\n        data[i + 3] = 255;\r\n    }\r\n    ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\n//灰色\r\n//  newr = (r * 0.272) + (g * 0.534) + (b * 0.131);\r\n//  newg = (r * 0.349) + (g * 0.686) + (b * 0.168);\r\n//  newb = (r * 0.393) + (g * 0.769) + (b * 0.189);\r\n\r\nfunction gray(canvas) {\r\n    let ctx = canvas.getContext(\"2d\")\r\n    let cols = canvas.width;\r\n    let rows = canvas.height;\r\n    let imgData = ctx.getImageData(0, 0, cols, rows)\r\n    let data = imgData.data\r\n    var len = imgData.data.length;\r\n    for (var i = 0; i < len; i += 4) {\r\n        // var avg = (data[i] + data[i + 1] + data[i + 2]) / 3;\r\n        // data[i] = avg;\r\n        // data[i + 1] = avg;\r\n        // data[i + 2] = avg;\r\n        let r = data[i],\r\n            g = data[i + 1],\r\n            b = data[i + 2]\r\n\r\n        data[i] = (r * 0.272) + (g * 0.534) + (b * 0.131);\r\n        data[i + 1] = (r * 0.349) + (g * 0.686) + (b * 0.168);\r\n        data[i + 2] = (r * 0.393) + (g * 0.769) + (b * 0.189);\r\n    }\r\n    ctx.putImageData(imgData, 0, 0);\r\n}\r\n\r\n\r\n/**\r\n * deep clone image data of canvas\r\n * \r\n * @param context\r\n * @param src\r\n * @returns\r\n */\r\nvar copyImageData = function (context, src) {\r\n    var dst = context.createImageData(src.width, src.height);\r\n    dst.data.set(src.data);\r\n    return dst;\r\n}\r\n/**\r\n * after pixel value - before pixel value + 128\r\n * 浮雕效果\r\n */\r\nvar relief = function (canvas) { //context, canvasData\r\n    let ctx = canvas.getContext(\"2d\")\r\n    let cols = canvas.width;\r\n    let rows = canvas.height;\r\n    let imgData = ctx.getImageData(0, 0, cols, rows)\r\n    let data = imgData.data\r\n    console.log(\"Canvas Filter - relief process\");\r\n    var tempCanvasData = copyImageData(ctx, imgData);\r\n    for (var x = 1; x < tempCanvasData.width - 1; x++) {\r\n        for (var y = 1; y < tempCanvasData.height - 1; y++) {\r\n\r\n            // Index of the pixel in the array    \r\n            var idx = (x + y * tempCanvasData.width) * 4;\r\n            var bidx = ((x - 1) + y * tempCanvasData.width) * 4;\r\n            var aidx = ((x + 1) + y * tempCanvasData.width) * 4;\r\n\r\n            // calculate new RGB value\r\n            var nr = tempCanvasData.data[aidx + 0] - tempCanvasData.data[bidx + 0] + 128;\r\n            var ng = tempCanvasData.data[aidx + 1] - tempCanvasData.data[bidx + 1] + 128;\r\n            var nb = tempCanvasData.data[aidx + 2] - tempCanvasData.data[bidx + 2] + 128;\r\n            nr = (nr < 0) ? 0 : ((nr > 255) ? 255 : nr);\r\n            ng = (ng < 0) ? 0 : ((ng > 255) ? 255 : ng);\r\n            nb = (nb < 0) ? 0 : ((nb > 255) ? 255 : nb);\r\n\r\n            // assign new pixel value    \r\n            imgData.data[idx + 0] = nr; // Red channel    \r\n            imgData.data[idx + 1] = ng; // Green channel    \r\n            imgData.data[idx + 2] = nb; // Blue channel    \r\n            imgData.data[idx + 3] = 255; // Alpha channel    \r\n        }\r\n    }\r\n}\r\n\r\n\r\n\r\n/**\r\n * convolution - keneral size 5*5 - blur effect filter(模糊效果)\r\n * \r\n */\r\nvar blur = function (canvas) {\r\n    let ctx = canvas.getContext(\"2d\")\r\n    let cols = canvas.width;\r\n    let rows = canvas.height;\r\n    let imgData = ctx.getImageData(0, 0, cols, rows)\r\n    let data = imgData.data\r\n    console.log(\"Canvas Filter - blur process\");\r\n    var tempCanvasData = copyImageData(ctx, imgData);\r\n    var sumred = 0.0,\r\n        sumgreen = 0.0,\r\n        sumblue = 0.0;\r\n    for (var x = 0; x < tempCanvasData.width; x++) {\r\n        for (var y = 0; y < tempCanvasData.height; y++) {\r\n\r\n            // Index of the pixel in the array    \r\n            var idx = (x + y * tempCanvasData.width) * 4;\r\n            for (var subCol = -2; subCol <= 2; subCol++) {\r\n                var colOff = subCol + x;\r\n                if (colOff < 0 || colOff >= tempCanvasData.width) {\r\n                    colOff = 0;\r\n                }\r\n                for (var subRow = -2; subRow <= 2; subRow++) {\r\n                    var rowOff = subRow + y;\r\n                    if (rowOff < 0 || rowOff >= tempCanvasData.height) {\r\n                        rowOff = 0;\r\n                    }\r\n                    var idx2 = (colOff + rowOff * tempCanvasData.width) * 4;\r\n                    var r = tempCanvasData.data[idx2 + 0];\r\n                    var g = tempCanvasData.data[idx2 + 1];\r\n                    var b = tempCanvasData.data[idx2 + 2];\r\n                    sumred += r;\r\n                    sumgreen += g;\r\n                    sumblue += b;\r\n                }\r\n            }\r\n\r\n            // calculate new RGB value\r\n            var nr = (sumred / 25.0);\r\n            var ng = (sumgreen / 25.0);\r\n            var nb = (sumblue / 25.0);\r\n\r\n            // clear previous for next pixel point\r\n            sumred = 0.0;\r\n            sumgreen = 0.0;\r\n            sumblue = 0.0;\r\n\r\n            // assign new pixel value    \r\n            imgData.data[idx + 0] = nr; // Red channel    \r\n            imgData.data[idx + 1] = ng; // Green channel    \r\n            imgData.data[idx + 2] = nb; // Blue channel    \r\n            imgData.data[idx + 3] = 255; // Alpha channel    \r\n        }\r\n    }\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    reverse,\r\n    gray,\r\n    relief,\r\n    blur\r\n});\n\n//# sourceURL=webpack:///./src/filter.js?");

/***/ }),

/***/ "./src/fractal.js":
/*!************************!*\
  !*** ./src/fractal.js ***!
  \************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//分叉 \r\n//分形fractal;\r\nvar branch = function (options, callback) {\r\n    let {\r\n        level = 3\r\n    } = options\r\n    options.level = level\r\n    var _branch = function (options) {\r\n        let {\r\n            level,\r\n            r,\r\n            n,\r\n            step = {\r\n                r: 1,\r\n                n: 0\r\n            }\r\n        } = options\r\n        if (level-- <= 0) {\r\n            return\r\n        }\r\n        options.level = level\r\n        if (callback) {\r\n            options = callback(options)\r\n            let points = options.points\r\n            points.forEach(t => {\r\n                _branch(\r\n                    Object.assign(options, {\r\n                        o: t,\r\n                        level,\r\n                        r: r * step.r,\r\n                        n: n + step.n\r\n                    })\r\n                )\r\n            })\r\n        }\r\n    }\r\n    _branch(options)\r\n}\r\n\r\n//统计图形个数\r\n// level2=  1+n\r\n// 3= 1+  n+  n*n  \r\n//4= 1+n+n*n+ n*n*n\r\nvar stat = function (level, n) {\r\n    let total = 0\r\n    while (level-- > 0) {\r\n        total += Math.pow(n, level)\r\n    }\r\n    return total\r\n}\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    branch,\r\n    stat\r\n});\n\n//# sourceURL=webpack:///./src/fractal.js?");

/***/ }),

/***/ "./src/index.js":
/*!**********************!*\
  !*** ./src/index.js ***!
  \**********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var _mysvg__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./mysvg */ \"./src/mysvg.js\");\n/* harmony import */ var _mycanvas__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./mycanvas */ \"./src/mycanvas.js\");\n/* harmony import */ var _sample_1__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./sample/1 */ \"./src/sample/1.js\");\n\r\n\r\n\r\n\r\n// function component() {\r\n//     var element = document.createElement('div');\r\n//     element.innerHTML = ['Hello', 'webpack'].join(\" \")\r\n//     return element;\r\n// }\r\n\r\n// document.body.appendChild(component());\r\n\r\n\r\nObject(_mycanvas__WEBPACK_IMPORTED_MODULE_1__[\"setup\"])()\r\nObject(_mycanvas__WEBPACK_IMPORTED_MODULE_1__[\"anime\"])(_sample_1__WEBPACK_IMPORTED_MODULE_2__[\"figures\"])\n\n//# sourceURL=webpack:///./src/index.js?");

/***/ }),

/***/ "./src/lattice.js":
/*!************************!*\
  !*** ./src/lattice.js ***!
  \************************/
/*! exports provided: latticepoints */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"latticepoints\", function() { return latticepoints; });\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sort */ \"./src/sort.js\");\n//dotarray 点阵\r\n\r\n\r\nfunction _lattice({\r\n    a,\r\n    b\r\n}) {\r\n    let points = []\r\n    for (let i = -1 * a; i < a; i++) {\r\n        for (let j = -1 * b; j < b; j++) {\r\n            points.push([i, j])\r\n        }\r\n    }\r\n    return points\r\n}\r\n// {\r\n//     width,\r\n//     height\r\n// },\r\n//图形点阵\r\nfunction latticepoints(options) {\r\n    let {\r\n        o = [0, 0],\r\n            n = 3,\r\n            r = 10\r\n    } = options\r\n    let points = []\r\n\r\n    if (Array.isArray(n)) {\r\n        points = _lattice({\r\n            a: n[0],\r\n            b: n[1] || n[0]\r\n        }).map(t => [t[0] * r + o[0], t[1] * r + o[1]])\r\n    } else {\r\n        points = _lattice({\r\n            a: n,\r\n            b: n\r\n        }).map(t => [t[0] * r + o[0], t[1] * r + o[1]])\r\n    }\r\n\r\n    if (options.sort &&\r\n        _sort__WEBPACK_IMPORTED_MODULE_0__[\"default\"][options.sort]) {\r\n        points = _sort__WEBPACK_IMPORTED_MODULE_0__[\"default\"][options.sort](points)\r\n    }\r\n    return points\r\n}\r\n\r\n\r\n// //图形点阵\r\n// function lattice(canvas) {\r\n//     let ctx = canvas.getContext(\"2d\")\r\n//     let cols = canvas.width;\r\n//     let rows = canvas.height;\r\n//     var imgData = ctx.getImageData(0, 0, cols, rows)\r\n//     let data = imgData.data\r\n//     // console.log(data)\r\n//     var len = imgData.data.length;\r\n//     var res = [];\r\n//     for (var i = 0; i < rows; i++) {\r\n//         for (var j = 0; j < cols; j++) {\r\n//             var pos = (i * cols + j) * 4;\r\n//             if (data[pos] > 0) {\r\n//                 res.push([j, i])\r\n//             }\r\n//         }\r\n//     }\r\n//     return res\r\n// }\r\n\r\n\r\n\r\n// for (var i = 1; i <= rows; i++) {\r\n//     for (var j = 1; j <= cols; j++) {\r\n//         var pos = ((i - 1) * cols + (j)) * 4 - 1;\r\n//         if (data.data[pos] > 0) {\r\n//             // res += `<span class=\"black\" style=\"left: ${j*10}px;top: ${i*10}px\"></span>`\r\n//             // res.push([j * 10, i * 10])\r\n//             res.push([j , i ])\r\n//         }\r\n//     }\r\n// }\r\n// wrap.innerHTML = res;\r\n// //获取图片像素点阵\r\n// var canvas = document.createElement('canvas');\r\n// var ctx = canvas.getContext('2d');\r\n// var cols = 16;\r\n// var rows = 16;\r\n\r\n// function lattice(txt){\r\n//     cols = txt.length * 16\r\n//     canvas.width = cols;\r\n//     canvas.height = rows;\r\n//     ctx.clearRect(0,0,cols,rows);\r\n//     ctx.font = \"16px SimSun\";\r\n//     ctx.fillStyle = \"#000\";\r\n//     ctx.fillText(txt, 0, 14);\r\n//     var data = ctx.getImageData(0, 0, cols, rows)\r\n//     var len = data.data.length;\r\n//     var res = '';\r\n//     for(var i = 1; i <= rows; i++){\r\n//         for(var j = 1; j <= cols; j++){\r\n//             var pos = (( i-1 )*cols+( j ))*4 -1;\r\n//             if(data.data[pos] > 0){\r\n//                 res += `<span class=\"black\" style=\"left: ${j*10}px;top: ${i*10}px\"></span>`\r\n//             }\r\n//         }\r\n//     }\r\n//     wrap.innerHTML = res;\r\n// }\r\n// function draw(){\r\n//     var txt = text.value;\r\n//     if(txt){\r\n//         lattice(txt);\r\n//     }\r\n// }    \r\n// draw();\n\n//# sourceURL=webpack:///./src/lattice.js?");

/***/ }),

/***/ "./src/mycanvas.js":
/*!*************************!*\
  !*** ./src/mycanvas.js ***!
  \*************************/
/*! exports provided: setup, draw, shape, clear, anime */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setup\", function() { return setup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"draw\", function() { return draw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shape\", function() { return shape; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"clear\", function() { return clear; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"anime\", function() { return anime; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/config.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./points */ \"./src/points.js\");\n/* harmony import */ var _filter__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./filter */ \"./src/filter.js\");\n/* harmony import */ var _lattice__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./lattice */ \"./src/lattice.js\");\n/* harmony import */ var _color__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! ./color */ \"./src/color.js\");\n/* harmony import */ var _fractal__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ./fractal */ \"./src/fractal.js\");\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nlet {\r\n    wrapperOptions,\r\n    center\r\n} = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\nlet {\r\n    width,\r\n    height\r\n} = wrapperOptions\r\n\r\nlet canvas, ctx;\r\nvar setup = function () {\r\n    canvas = document.createElement('canvas')\r\n    ctx = canvas.getContext(\"2d\")\r\n    canvas.width = width\r\n    canvas.height = height\r\n    document.body.appendChild(canvas)\r\n    // var el = this.el = _.query(options.el)\r\n    // el.appendChild(canvas)\r\n    // var padding = options.padding || 0,\r\n    //     paddingLeft = options.paddingLeft || padding,\r\n    //     paddingRight = options.paddingRight || padding,\r\n    //     paddingTop = options.paddingTop || padding,\r\n    //     paddingBottom = options.paddingBottom || padding;\r\n    // this.center = [this.width / 2, this.height / 2];\r\n    // this.lefttop = [0 + paddingLeft, 0 + paddingTop];\r\n    // this.leftbottom = [0 + paddingLeft, this.height - paddingBottom];\r\n    // this.rightbottom = [this.width - paddingRight, this.height - paddingBottom];\r\n    // this.righttop = [this.width - paddingRight, 0 + paddingTop];\r\n}\r\n\r\nvar clear = function () {\r\n    ctx.clearRect(0, 0, width, height);\r\n};\r\n\r\n//链接\r\n//arr, shape\r\nvar link = function (opt) {\r\n    var _link = function (p1, p2, shape, sAngle, eAngle) {\r\n        ctx.strokeStyle = \"#000\";\r\n        ctx.beginPath();\r\n        switch (shape) {\r\n            case \"line\":\r\n                ctx.moveTo.apply(ctx, p1)\r\n                ctx.lineTo.apply(ctx, p2)\r\n                break;\r\n            case \"arc\":\r\n                var sAngle = sAngle || 0;\r\n                var eAngle = eAngle || (sAngle + Math.PI)\r\n                var r = this.dis(p1, p2) / 2\r\n                var o = this.mid(p1, p2)\r\n                ctx.arc.apply(ctx, o.concat([r, sAngle, eAngle]))\r\n                break;\r\n            case \"circle\":\r\n                var sAngle = 0;\r\n                var eAngle = 2 * Math.PI\r\n                var r = this.dis(p1, p2) / 2\r\n                var o = this.mid(p1, p2)\r\n                ctx.arc.apply(ctx, o.concat([r, sAngle, eAngle]))\r\n                break;\r\n        }\r\n        ctx.stroke()\r\n    }\r\n\r\n    var len = arguments.length\r\n    if (len === 3) {\r\n        var p1 = arguments[0],\r\n            p2 = arguments[1];\r\n        var shape = arguments[2];\r\n        _link(p1, p2, shape)\r\n\r\n    } else if (len === 2) {\r\n        var arr = arguments[0],\r\n            len = arr.length,\r\n            shape = arguments[1];\r\n        for (var i = 0; i < len - 1; i++) {\r\n            _link.apply(this, arr.slice(i, i + 2).concat([shape]))\r\n        }\r\n    } else if (len === 1) {\r\n        var arr = opt.points,\r\n            len = arr.length,\r\n            shape = opt.shape,\r\n            sAngle = opt.sAngle,\r\n            eAngle = opt.eAngle\r\n\r\n        for (var i = 0; i < len - 1; i++) {\r\n            _link.apply(this, arr.slice(i, i + 2).concat([shape, sAngle, eAngle]))\r\n        }\r\n    }\r\n\r\n};\r\n\r\n\r\n//打点\r\nvar dot = (options) => {\r\n    let {\r\n        points,\r\n        showLabel\r\n    } = options\r\n    ctx.fillStyle = \"#0000ff\";\r\n    let _dot = (t) => {\r\n        ctx.beginPath();\r\n        ctx.arc(t[0], t[1], 3, 0, 2 * Math.PI);\r\n        // ctx.stroke();\r\n        ctx.fill();\r\n        if (showLabel)\r\n            undefined.text(Math.floor(t[0]) + \",\" + Math.floor(t[1]), [t[0] - 5, t[1] + 10])\r\n    }\r\n    if (Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(points[0]) === \"array\") { //二维数组\r\n        points.forEach(t => _dot(t))\r\n    } else {\r\n        _dot(points)\r\n    }\r\n    return options\r\n}\r\n\r\n\r\n\r\n//弧线\r\nvar arc = (opitons) => {\r\n    let {\r\n        o,\r\n        strokeStyle = \"#000\"\r\n    } = opitons\r\n    let points = Object(_points__WEBPACK_IMPORTED_MODULE_2__[\"cutpoints\"])(opitons)\r\n    let len = points.length\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.beginPath();\r\n    points.forEach((t, i) => {\r\n        let t1 = i + 1 < len ? points[i + 1] : points[0];\r\n        let r = Object(_points__WEBPACK_IMPORTED_MODULE_2__[\"dis\"])(t, t1, o)\r\n        ctx.arcTo.apply(ctx, t.concat(t1).concat([r]))\r\n    })\r\n    ctx.stroke()\r\n    return Object.assign(opitons, {\r\n        points\r\n    })\r\n}\r\n\r\n//连线\r\nvar line = (options) => {\r\n    let {\r\n        points,\r\n        fillStyle,\r\n        strokeStyle = \"#000\",\r\n        closePath = true,\r\n        colors,\r\n        index = 0\r\n    } = options\r\n    if (colors)\r\n        strokeStyle = colors[index]\r\n    if (fillStyle) ctx.fillStyle = fillStyle //\"white\"\r\n    ctx.strokeStyle = strokeStyle;\r\n    ctx.beginPath();\r\n    points.forEach((t, i) => {\r\n        if (i === 0) {\r\n            ctx.moveTo.apply(ctx, t)\r\n        }\r\n        ctx.lineTo.apply(ctx, t)\r\n    })\r\n    if (closePath)\r\n        ctx.closePath();\r\n    ctx.stroke()\r\n    if (fillStyle) ctx.fill()\r\n\r\n    return options\r\n};\r\n\r\n\r\n//射线\r\n//一中心p,多中心o [p1,p2]\r\nvar ray = (options) => {\r\n    let {\r\n        o,\r\n        strokeStyle = \"#000\",\r\n        colors,\r\n        index = 0\r\n    } = options\r\n    let points = Object(_points__WEBPACK_IMPORTED_MODULE_2__[\"cutpoints\"])(options)\r\n    // options.points = points\r\n\r\n    if (colors) {\r\n        ctx.strokeStyle = colors[index]\r\n    } else {\r\n        ctx.strokeStyle = strokeStyle;\r\n    }\r\n\r\n    ctx.beginPath();\r\n    if (Array.isArray(o[0])) { //二维数组  多中心\r\n        var n = o.length;\r\n        points.forEach((t, i) => {\r\n            ctx.moveTo.apply(ctx, o[i % n])\r\n            ctx.lineTo.apply(ctx, t)\r\n        })\r\n    } else {\r\n        points.forEach((t, i) => {\r\n            ctx.moveTo.apply(ctx, o)\r\n            ctx.lineTo.apply(ctx, t)\r\n        })\r\n    }\r\n    ctx.stroke()\r\n    // return options\r\n    return Object.assign(opitons, {\r\n        points\r\n    })\r\n};\r\n//正方形，矩形\r\nvar rect = (options) => {\r\n    let {\r\n        o,\r\n        r,\r\n        strokeStyle = '#000',\r\n        fillStyle\r\n    } = options\r\n    ctx.strokeStyle = strokeStyle;\r\n    if (fillStyle)\r\n        ctx.fillStyle = fillStyle\r\n    ctx.beginPath();\r\n    ctx.rect.apply(ctx, [o[0] - r / 2, o[1] - r / 2].concat([r, r]))\r\n    ctx.stroke()\r\n    if (fillStyle)\r\n        ctx.fill()\r\n    return options\r\n}\r\n//圆形\r\nvar circle = function (options) {\r\n    let {\r\n        o,\r\n        r,\r\n        fillStyle,\r\n        strokeStyle = '#000'\r\n    } = options\r\n    ctx.strokeStyle = strokeStyle\r\n    if (fillStyle)\r\n        ctx.fillStyle = fillStyle\r\n    ctx.beginPath();\r\n    ctx.arc.apply(ctx, o.concat([r, 0, 2 * Math.PI]))\r\n    ctx.stroke()\r\n    if (fillStyle)\r\n        ctx.fill()\r\n    return options\r\n}\r\n\r\n//文字\r\nvar text = function (options) {\r\n    let {\r\n        text,\r\n        x,\r\n        y,\r\n        fillStyle\r\n    } = options\r\n    ctx.fillStyle = fillStyle\r\n    ctx.font = \"20px Verdana\";\r\n    ctx.fillText(text, x, y);\r\n    return options\r\n}\r\n\r\n//规则多边形\r\nvar polygon = function (options) {\r\n    let points = Object(_points__WEBPACK_IMPORTED_MODULE_2__[\"cutpoints\"])(options)\r\n    return line(Object.assign(options, {\r\n        points\r\n    }))\r\n}\r\n\r\n//点阵\r\nvar lattice=function(options){\r\n    let points = Object(_lattice__WEBPACK_IMPORTED_MODULE_4__[\"latticepoints\"])(options)\r\n    return line(Object.assign(options, {\r\n        points\r\n    }))\r\n}\r\n//同义词\r\nvar _synonym = function (options) {\r\n    var synonym = {\r\n        color: 'fillStyle',\r\n        linecolor: 'strokeStyle',\r\n        // linewidth: 'strokeWidth'\r\n    }\r\n    Object.keys(options).forEach(t => {\r\n        let key = synonym[t.toLowerCase()]\r\n        if (key) {\r\n            options[key] = options[t]\r\n        }\r\n    })\r\n    return options\r\n}\r\n//默认参数\r\nvar defaultOptions = function (tag, options) {\r\n    let _default = {}\r\n    switch (tag) {\r\n        case 'circle':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                color: 'red',\r\n                lineColor: 'black'\r\n            }\r\n            break;\r\n        case 'text':\r\n            _default = {\r\n                x: center[0],\r\n                y: 20,\r\n                fontSize: 20,\r\n                text: 'Canvas'\r\n            }\r\n            break;\r\n        case 'polygon':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                n: 5,\r\n                sAngle: 0,\r\n                // color: 'blue',\r\n                lineColor: 'black'\r\n            }\r\n            break;\r\n        case 'rect':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                sAngle: 0,\r\n                color: 'blue',\r\n                lineColor: 'black'\r\n            }\r\n            break;\r\n        case 'ray':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                n: 5,\r\n                sAngle: 0,\r\n                // color: 'blue',\r\n                lineColor: 'black'\r\n            }\r\n            break;\r\n        case 'arc':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                n: 5,\r\n                sAngle: 0,\r\n                // color: 'blue',\r\n                lineColor: 'black'\r\n            }\r\n            break;\r\n        case 'lattice':\r\n            _default = {\r\n                o: center,\r\n                r: 50,\r\n                n: 4\r\n            }\r\n            break;\r\n    }\r\n\r\n    return _synonym(Object.assign(_default, options))\r\n}\r\n\r\n\r\n//图形\r\nvar shape = function (tag, options) {\r\n    options = defaultOptions(tag, options)\r\n    switch (tag) {\r\n        case \"circle\":\r\n            options = circle(options);\r\n            break;\r\n        case 'text':\r\n            options = text(options);\r\n            break;\r\n        case 'polygon':\r\n            options = polygon(options);\r\n            break;\r\n        case 'ray':\r\n            options = ray(options);\r\n            break;\r\n        case 'arc':\r\n            options = arc(options);\r\n            break;\r\n        case 'rect':\r\n            options = rect(options);\r\n            break;\r\n        // case 'lattice':\r\n        //     doFilter('lattice')\r\n        //     break;\r\n        case 'lattice':\r\n            \r\n            options = lattice(options)\r\n            break;\r\n    }\r\n    // console.log(options)\r\n    return options\r\n}\r\n\r\n//滤镜\r\nfunction doFilter(t, options) {\r\n    if (t === 'lattice') {\r\n        let points = lattice(canvas)\r\n        console.log(points)\r\n        clear()\r\n        let colors = _color__WEBPACK_IMPORTED_MODULE_5__[\"default\"].circle(points.length)\r\n        points.forEach((t, i) => {\r\n            let opt = Object.assign(options, {\r\n                o: t,\r\n                shape: 'circle',\r\n                r: 2,\r\n                color: colors[i] // hsla()\r\n            })\r\n            if (i % 100 == 0)\r\n                circle(opt)\r\n        })\r\n    } else {\r\n        _filter__WEBPACK_IMPORTED_MODULE_3__[\"default\"][t] && _filter__WEBPACK_IMPORTED_MODULE_3__[\"default\"][t](canvas)\r\n    }\r\n}\r\n\r\n//分形调用\r\nvar doFractal = function (t, options) {\r\n    let {\r\n        level = 3,\r\n            n = 5\r\n    } = options\r\n    let len = _fractal__WEBPACK_IMPORTED_MODULE_6__[\"default\"].stat(level, n)\r\n    console.log(len)\r\n    let colors = _color__WEBPACK_IMPORTED_MODULE_5__[\"default\"].circle(len)\r\n    options.colors = colors\r\n    // options.index = 0\r\n    let index = 0\r\n    _fractal__WEBPACK_IMPORTED_MODULE_6__[\"default\"][t](options, function (options) {\r\n        // options.index++\r\n        index++\r\n        Object.assign(options, {\r\n            index\r\n        })\r\n        return shape(options.shape, options)\r\n    })\r\n}\r\n\r\n//画图\r\nvar draw = function (arr, options) {\r\n    arr.forEach(t => {\r\n        switch (Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(t)) {\r\n            case 'string':\r\n                shape(t, options)\r\n                break;\r\n            case 'object':\r\n\r\n                //分形\r\n                if (t.fractal) {\r\n                    doFractal(t.fractal, Object.assign({}, options, t))\r\n                } else {\r\n                    //画图\r\n                    if (t.shape) {\r\n                        shape(t.shape, Object.assign({}, options, t))\r\n                    }\r\n                }\r\n\r\n                //滤镜\r\n                if (t.filter) {\r\n                    doFilter(t.filter, Object.assign({}, options, t))\r\n                }\r\n\r\n                break;\r\n            default:\r\n                if (Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(t).test(/svg/i)) {\r\n                    console.log(\"is svg element\")\r\n                }\r\n                break;\r\n        }\r\n    })\r\n}\r\n\r\n//动画\r\nlet anime = (figures, options) => {\r\n    setInterval(() => {\r\n        clear()\r\n        figures = figures.map(t => {\r\n            let {\r\n                sign = 1\r\n            } = t\r\n            let {\r\n                prop,\r\n                range=[0,0],\r\n                speed,\r\n                act\r\n            } = Object.assign({}, t.anime, options)\r\n            if (t[prop] > range[1]) {\r\n                t.sign = -1\r\n            } else if (t[prop] < range[0]) {\r\n                t.sign = 1\r\n            }\r\n            t[prop] = t[prop] + sign * speed\r\n            return t\r\n        })\r\n\r\n        draw(figures)\r\n    }, 17);\r\n\r\n}\r\n\r\n// var animate = function (arr, options, duration) {\r\n//     let index = 0;\r\n//     (function _ani() {\r\n//         if (index++ >= 1000) {\r\n//             return false\r\n//         }\r\n//         clear()\r\n//         draw(arr, options)\r\n//         // switch (act) {\r\n//         //     case \"point\":\r\n//         //         _this.point.call(_this, arr[index++])\r\n//         //         break;\r\n//         //     case \"line\":\r\n//         //         _this.line.call(_this, arr.slice(index++, index + 1))\r\n//         //         break;\r\n//         //     case \"ray\":\r\n//         //         if (cs) {\r\n//         //             _this.ray.call(_this, cs[index % cs.length], arr.slice(index++, index))\r\n//         //         } else {\r\n//         //             _this.ray.call(_this, _this.center, arr.slice(index++, index))\r\n//         //         }\r\n\r\n//         //         break;\r\n//         // }\r\n//         setTimeout(_ani, duration)\r\n//     })();\r\n\r\n// }\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/mycanvas.js?");

/***/ }),

/***/ "./src/mysvg.js":
/*!**********************!*\
  !*** ./src/mysvg.js ***!
  \**********************/
/*! exports provided: setup, draw, shape */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"setup\", function() { return setup; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"draw\", function() { return draw; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"shape\", function() { return shape; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/config.js\");\n/* harmony import */ var _utils__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils */ \"./src/utils.js\");\n/* harmony import */ var _points__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./points */ \"./src/points.js\");\n\r\n\r\n\r\nlet {\r\n    wrapperOptions,\r\n    center\r\n} = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"]\r\n\r\n//连字符\r\nvar hyphenate = function (str) {\r\n    return str.replace(/\\B([A-Z])/g, '-$1').toLowerCase()\r\n};\r\nvar createSvgDom = function (tag) {\r\n    return document.createElementNS('http://www.w3.org/2000/svg', tag)\r\n}\r\nvar svgWrappper = function (svgDom) {\r\n    var svg = createSvgDom(\"svg\")\r\n    var options = Object.assign(wrapperOptions, {\r\n        fill: 'red'\r\n    })\r\n    console.log(options, document.body)\r\n    for (var key in options) {\r\n        svg.setAttribute(key, options[key])\r\n    }\r\n    if (Array.isArray(svgDom)) {\r\n        svgDom.forEach(function (t) {\r\n            svg.appendChild(t)\r\n        })\r\n    } else if (svgDom) {\r\n        svg.appendChild(svgDom)\r\n    }\r\n    return svg\r\n}\r\n\r\nvar wrapper;\r\nvar setup=function(){\r\n    wrapper = svgWrappper()\r\n    document.body.appendChild(wrapper);\r\n}\r\n\r\n\r\n//多边形\r\nvar polygon = function (options) {\r\n    let points = Object(_points__WEBPACK_IMPORTED_MODULE_2__[\"cutpoints\"])(options)\r\n    options.points = points.join(\" \")\r\n}\r\n\r\n//图形\r\nvar shape = function (tag, options) {\r\n    options = defaultOptions(tag, options)\r\n    console.log(options)\r\n    if ('polygon' === tag) {\r\n        polygon(options);\r\n    }\r\n    var sd = createSvgDom(tag)\r\n    for (var key in options) {\r\n        if (key == 'text') {\r\n            sd.textContent = options[key]\r\n        } else {\r\n            sd.setAttribute(hyphenate(key), options[key])\r\n        }\r\n    }\r\n    return sd\r\n}\r\n\r\n//默认参数\r\nvar defaultOptions = function (tag, options) {\r\n    let _default = {}\r\n    let {\r\n        width,\r\n        height,\r\n        cx,\r\n        cy\r\n    } = wrapperOptions\r\n    switch (tag) {\r\n        case 'circle':\r\n            _default = {\r\n                cx,\r\n                cy,\r\n                r: 40,\r\n                stroke: 'black',\r\n                strokeWidth: 2,\r\n                fill: 'red'\r\n            }\r\n            break;\r\n        case 'text':\r\n            _default = {\r\n                x: cx,\r\n                y: 20,\r\n                fontSize: 20,\r\n                text: 'SVG'\r\n            }\r\n            break;\r\n        case 'rect':\r\n            _default = {\r\n                // x=\"20\" y=\"20\" rx=\"20\" ry=\"20\"\r\n                x: cx,\r\n                y: cy,\r\n                width: 100,\r\n                height: 30,\r\n                fill: 'rgb(0,0,255)',\r\n                strokeWidth: 2,\r\n                stroke: 'rgb(0, 0, 0)'\r\n                // style: 'fill:rgb(0,0,255);stroke-width:1;stroke:rgb(0,0,0)'\r\n            }\r\n            break;\r\n        case 'line':\r\n            _default = {\r\n                x1: 0,\r\n                y1: cy, //380,\r\n                x2: width, //620,\r\n                y2: cy, //380,\r\n                stroke: 'black',\r\n                strokeWidth: 1.5\r\n            };\r\n            break;\r\n        case 'path':\r\n            _default = {\r\n                d: \"M1 20 L20 1 L40 20 Z\",\r\n                style: \"stroke: black; stroke-width: 1\"\r\n            };\r\n            break;\r\n        case 'polygon':\r\n            _default = {\r\n                o: center,\r\n                r: 100,\r\n                n: 5,\r\n                sAngle: 0,\r\n                stroke: 'black',\r\n                strokeWidth: 1\r\n                // style: 'fill:white;stroke:#000000;stroke-width:1;fill-rule:nonzero;'\r\n            }\r\n            break;\r\n    }\r\n\r\n    _synonym(options)\r\n    //style\r\n    _style(options)\r\n\r\n    return Object.assign(_default, options)\r\n}\r\n\r\n//同义词转化\r\nvar _synonym = function (options) {\r\n    //同义词\r\n    var synonym = {\r\n        color: 'fill',\r\n        linecolor: 'stroke',\r\n        linewidth: 'strokeWidth'\r\n    }\r\n    //同义词\r\n    Object.keys(options).forEach(t => {\r\n        let key = synonym[t.toLowerCase()]\r\n        if (key) {\r\n            options[key] = options[t]\r\n        }\r\n    })\r\n}\r\n\r\n//样式转化\r\nvar _style = function (options) {\r\n    options.style = options.style || ['fill', 'stroke', 'strokeWidth', 'fillRule'].filter(t => {\r\n        return Object.hasOwnProperty.call(options, t)\r\n    }).map(t => {\r\n        return Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"kebab\"])(t) + ':' + options[t]\r\n    }).join(\";\")\r\n}\r\n\r\n\r\n\r\n//画图\r\nvar draw = function (arr, options) {\r\n\r\n    if (!Array.isArray(arr)) {\r\n        arr = [arr]\r\n    }\r\n    var _draw = function (done) {\r\n        arr.forEach(function (t, index) {\r\n            switch (Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(t)) {\r\n                case 'string':\r\n                    t = shape(t, options)\r\n                    break;\r\n                case 'object':\r\n                    t = shape(t.shape, Object.assign({}, options, t))\r\n                    break;\r\n                default:\r\n                    if (Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(t).test(/svg/i)) {\r\n                        console.log(\"is svg element\")\r\n                    }\r\n                    break;\r\n            }\r\n            console.log(Object(_utils__WEBPACK_IMPORTED_MODULE_1__[\"_type\"])(t))\r\n            if (options && options.delay) {\r\n                setTimeout(function () {\r\n                    wrapper.appendChild(t)\r\n\r\n                    if (options.loop == true && (index == arr.length - 1)) {\r\n                        // while (wrapper.firstChild) {\r\n                        //     wrapper.removeChild(wrapper.firstChild);\r\n                        // }\r\n                        done()\r\n                    }\r\n                }, index * options.delay)\r\n            } else {\r\n                wrapper.appendChild(t)\r\n            }\r\n        })\r\n\r\n    }\r\n\r\n\r\n    if (options && options.loop) {\r\n        setInterval(() => {\r\n\r\n            _draw(() => {\r\n                setTimeout(() => {\r\n                    while (wrapper.firstChild) {\r\n                        wrapper.removeChild(wrapper.firstChild);\r\n                    }\r\n                }, options.delay)\r\n            })\r\n\r\n        }, arr.length * options.delay)\r\n    } else {\r\n        _draw()\r\n    }\r\n};\r\n\r\n\r\n\n\n//# sourceURL=webpack:///./src/mysvg.js?");

/***/ }),

/***/ "./src/points.js":
/*!***********************!*\
  !*** ./src/points.js ***!
  \***********************/
/*! exports provided: cutpoints, dis, mid, split */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"cutpoints\", function() { return cutpoints; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"dis\", function() { return dis; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"mid\", function() { return mid; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"split\", function() { return split; });\n/* harmony import */ var _sort__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./sort */ \"./src/sort.js\");\n\r\n\r\n//顶点 vertices\r\n//分割点\r\n// 参数：[x,y],[r1,r2],n\r\n//半径 r,r1~r2  , [r1,r2,r3]\r\n//optionsions{o:[xy],r:[r1,r2],n:n,rn:\"random\"}\r\n//regular, direction, sAngle\r\n//圆弧分割  Arc segmentation\r\nvar cutpoints = function (options) {\r\n    let {\r\n        o,\r\n        r,\r\n        n,\r\n        sAngle = 0,\r\n        direction,\r\n        regular = true\r\n    } = options\r\n    // o = o || center\r\n    var points = [],\r\n        a;\r\n\r\n    // var regular = options.regular == null ? true : options.regular;\r\n\r\n    var _cut = function (o, r, n, i, regular, direction) {\r\n        if (regular) {\r\n            if (direction === \"top\") {\r\n                a = 1.25 * Math.PI + 0.5 * Math.PI * i / n\r\n            } else {\r\n                a = i * 2 * Math.PI / n + (sAngle / 2 * Math.PI) //等角\r\n            }\r\n        } else { //随机角\r\n            if (direction === \"top\") {\r\n                a = 1.25 * Math.PI + 0.5 * Math.PI * Math.random()\r\n            } else if (direction === \"outter\") {\r\n                a = 1 * Math.PI * Math.random()\r\n            } else {\r\n                a = 2 * Math.PI * Math.random()\r\n            }\r\n        }\r\n        points[i] = [o[0] + r * Math.cos(a), o[1] + r * Math.sin(a)]\r\n    }\r\n\r\n    if (Array.isArray(r)) {\r\n        var len = r.length\r\n        for (var i = 0; i < n; i++) {\r\n            var rn = r[i % len]\r\n            _cut(o, rn, n, i, regular, direction)\r\n        }\r\n    } else if (/~/.test(r)) {\r\n        var rs = r.split(\"~\").map(function (t) {\r\n            return +t\r\n        })\r\n        for (var i = 0; i < n; i++) {\r\n            var rn = rs[0] + (rs[1] - rs[0]) * Math.random();\r\n            _cut(o, rn, n, i, regular, direction)\r\n        }\r\n    } else {\r\n        for (var i = 0; i < n; i++) {\r\n            _cut(o, r, n, i, regular, direction)\r\n        }\r\n    }\r\n\r\n    // return arr\r\n\r\n    if (options.sort &&\r\n        _sort__WEBPACK_IMPORTED_MODULE_0__[\"default\"][options.sort]) {\r\n        points = _sort__WEBPACK_IMPORTED_MODULE_0__[\"default\"][options.sort](points)\r\n    }\r\n    return  points\r\n}\r\n\r\n//距离 distance\r\nvar dis = function (p1, p2) {\r\n    return Math.sqrt(Math.pow(p1[0] - p2[0], 2) + Math.pow(p1[1] - p2[1], 2))\r\n};\r\n//中心点\r\nvar mid = function (p1, p2) {\r\n    return [(p1[0] + p2[0]) / 2, (p1[1] + p2[1]) / 2]\r\n}\r\n//均分点meanSplit。分割n次，分割成n+1段\r\n//分割直线\r\nvar split = function (p1, p2, n) {\r\n    var ps = [];\r\n    for (var i = 1; i <= n; i++)\r\n        ps[ps.length] = this.toV(p).scale(i / (n + 1)).toP(this);\r\n    return ps;\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/points.js?");

/***/ }),

/***/ "./src/sample/1.js":
/*!*************************!*\
  !*** ./src/sample/1.js ***!
  \*************************/
/*! exports provided: figures */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"figures\", function() { return figures; });\nconst figures = [{\r\n    shape: 'lattice',\r\n    sort: 'parity', //shuffle parity misplaced shuffle\r\n    n: [4, 10],\r\n    r: 50,\r\n    anime: {\r\n        prop: 'r',\r\n        range: [0, 100],\r\n        speed: 0.1,\r\n        act: 'uniform'\r\n    }\r\n}, {\r\n    shape: 'polygon',\r\n    r: 75,\r\n    n: 5,\r\n    color: 'white',\r\n    sort: 'parity',\r\n    sAngle: 10,\r\n    anime: {\r\n        prop: 'sAngle',\r\n        range: [0, 100],\r\n        speed: 0.01,\r\n        act: 'uniform'\r\n    }\r\n\r\n}]\r\n\r\n\n\n//# sourceURL=webpack:///./src/sample/1.js?");

/***/ }),

/***/ "./src/sort.js":
/*!*********************!*\
  !*** ./src/sort.js ***!
  \*********************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n//数组排序工具\r\n\r\n\r\n\r\n//数组乱序 random\r\nvar shuffle = function (arr, index) {\r\n    if (index === undefined) {\r\n        for (let i = arr.length - 1; i >= 0; i--) {\r\n            let rIndex = Math.floor(Math.random() * (i + 1));\r\n            // 打印交换值\r\n            // console.log(i, rIndex);\r\n            let temp = arr[rIndex];\r\n            arr[rIndex] = arr[i];\r\n            arr[i] = temp;\r\n        }\r\n        return arr;\r\n    }\r\n\r\n    let res = [];\r\n    // 取出固定值\r\n    let fix = arr.splice(index, 1)[0];\r\n    for (let i = arr.length - 1; i >= 0; i--) {\r\n        let rIndex = Math.floor(Math.random() * (i + 1));\r\n        res.push(arr[rIndex]);\r\n        arr.splice(rIndex, 1);\r\n    }\r\n    // 将固定值放入指定位置\r\n    res.splice(index, 0, fix);\r\n    return res;\r\n}\r\n\r\n\r\n//两个元素交换位置\r\nfunction swapArr(arr, x, y) {\r\n    // arr[x] = arr.splice(y, 1, arr[x])[0];\r\n    arr.splice(x, 1, ...arr.splice(y, 1, arr[x]))\r\n    return arr;\r\n}\r\n\r\n//邻居互换  数组,固定序号\r\nvar neighborSwap = function (arr, index) {\r\n    if (index === undefined) {\r\n        for (let i = 0; i < arr.length; i = i + 2) {\r\n            swapArr(arr, i, i + 1)\r\n        }\r\n        return arr\r\n    } else {\r\n        let fix = arr.splice(index, 1)[0];\r\n        for (let i = 0; i < arr.length; i = i + 2) {\r\n            swapArr(arr, i, i + 1)\r\n        }\r\n        arr.splice(index, 0, fix);\r\n        return arr\r\n    }\r\n}\r\n//隔位重排\r\nfunction intervalSort(arr, index) {\r\n    if (index !== undefined) {\r\n        newSeq(arr, index)\r\n    }\r\n    for (let i = 0; i < arr.length - 2; i++) {\r\n        swapArr(arr, i + 1, i + 2)\r\n    }\r\n    return arr\r\n}\r\n\r\n//从第几个开始重新编号\r\nfunction newSeq(arr, index) {\r\n    arr.splice(0, 0, ...arr.splice(index, arr.length - index))\r\n    return arr\r\n}\r\n\r\n\r\n//错位排序\r\nfunction misplaced(arr) {\r\n    for (let i = 0; i < arr.length / 2 + 1; i++) {\r\n        var cur = arr.pop();\r\n        arr.splice(i * 2 + 1, 0, cur)\r\n    }\r\n    return arr\r\n}\r\n\r\n// console.log(newSeq([1, 2, 3, 4, 5], 1))\r\n\r\n//数组每隔n位截取一次\r\nfunction chunk(arr, num) {\r\n    let j = 0,\r\n        o = j;\r\n    let newArray = [];\r\n    while (j < arr.length) {\r\n        j += num;\r\n        newArray.push([arr.slice(o, j)]);\r\n        o = j;\r\n    }\r\n    return newArray;\r\n}\r\n\r\n\r\n// console.log(intervalSort([0, 1, 2, 3, 4]))\r\n\r\n//奇偶数排序oddEvenSort\r\nfunction parity(arr) {\r\n    let seq = arr.map((t, i) => {\r\n        return i\r\n    })\r\n    // seq = seq.sort((a, b) => {\r\n    //     if (a % 2 === 0 && b % 2 === 1) {\r\n    //         return 1;\r\n    //     }\r\n    //     return 0;\r\n    // })\r\n\r\n    seq=seq.sort((a, b) => {\r\n        if (a % 2 === 0) {\r\n            if (b % 2 !== 0) {\r\n                return -1;\r\n            }\r\n            return 0;\r\n        } else{\r\n            return 1\r\n        }\r\n    })\r\n    console.log(seq)\r\n\r\n    return seq.map(t => {\r\n        return arr[t]\r\n    })\r\n}\r\n\r\n\r\n\r\n//置顶移动\r\nfunction toFirst(fieldData, index) {\r\n    if (index != 0) {\r\n        // fieldData[index] = fieldData.splice(0, 1, fieldData[index])[0]; 这种方法是与另一个元素交换了位子，\r\n        fieldData.unshift(fieldData.splice(index, 1)[0]);\r\n    }\r\n}\r\n\r\n\r\n// 3:up 上移动一格\r\nfunction upGo(fieldData, index) {\r\n    if (index != 0) {\r\n        fieldData[index] = fieldData.splice(index - 1, 1, fieldData[index])[0];\r\n    } else {\r\n        fieldData.push(fieldData.shift());\r\n    }\r\n}\r\n\r\n// down 下移动一格\r\nfunction downGo(fieldData, index) {\r\n    if (index != fieldData.length - 1) {\r\n        fieldData[index] = fieldData.splice(index + 1, 1, fieldData[index])[0];\r\n    } else {\r\n        fieldData.unshift(fieldData.splice(index, 1)[0]);\r\n    }\r\n}\r\n\r\n\r\n//冒泡排序\r\nvar bubleSort = function (arr) {\r\n    const len = arr.length;\r\n    for (let i = 0; i < len - 1; i++) {\r\n        for (let j = 0; j < len - 1 - i; j++) {\r\n            if (arr[j] > arr[j + 1]) {\r\n                let temp = arr[j];\r\n                arr[j] = arr[j + 1];\r\n                arr[j + 1] = temp;\r\n            }\r\n        }\r\n    }\r\n    return arr;\r\n}\r\n\r\n\r\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\r\n    shuffle,\r\n    neighborSwap,\r\n    intervalSort,\r\n    misplaced,\r\n    parity\r\n});\n\n//# sourceURL=webpack:///./src/sort.js?");

/***/ }),

/***/ "./src/utils.js":
/*!**********************!*\
  !*** ./src/utils.js ***!
  \**********************/
/*! exports provided: _type, splitWords, camelCase, kebab */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"_type\", function() { return _type; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"splitWords\", function() { return splitWords; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"camelCase\", function() { return camelCase; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, \"kebab\", function() { return kebab; });\n/* harmony import */ var _config__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./config */ \"./src/config.js\");\n\r\n//类型判断\r\nconst _type = function (o) {\r\n    if (o === null) return 'null';\r\n    if (o === undefined) return 'undefined'; //兼容ie8\r\n    var s = Object.prototype.toString.call(o);\r\n    var t = s.match(/\\[object (.*?)\\]/)[1].toLowerCase();\r\n    return t === 'number' ? isNaN(o) ? 'nan' : !isFinite(o) ? 'infinity' : t : t;\r\n}\r\n\r\n\r\n\r\n//判断对象是否有属性 ，忽略大小写\r\nfunction hasProp(obj, key, ignoreCase) {\r\n    if (ignoreCase) {\r\n        key = key.toLowerCase()\r\n        for (let k in obj) {\r\n            if (k.toLowerCase() == key) {\r\n                return true\r\n            }\r\n        }\r\n    } else {\r\n        return Object.hasOwnProperty.call(obj, key)\r\n    }\r\n}\r\n//获取对象的值  ，忽略大小写\r\nfunction getValue(obj, key, ignoreCase) {\r\n    if (ignoreCase) {\r\n        key = key.toLowerCase()\r\n        for (let k in obj) {\r\n            if (k.toLowerCase() == key) {\r\n                return obj[k]\r\n            }\r\n        }\r\n    } else {\r\n        return obj[key]\r\n    }\r\n}\r\n//按长度排序\r\nfunction sortByLen(arr) {\r\n    return arr.map(i => ({\r\n            raw: i,\r\n            len: i.length\r\n        }))\r\n        .sort((p, n) => n.len - p.len)\r\n        .map(i => i.raw)\r\n}\r\nlet words = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].words ? sortByLen(_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].words) : []\r\nvar wordsReg = words.length > 0 ? RegExp(words.join(\"|\"), 'i') : RegExp(/\\w+/, 'i')\r\n\r\n\r\n//切分原则，比对最长的单词，剩余的可递归\r\nfunction splitWords(t) {\r\n    if (!t) return []\r\n    if (_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].splitWords && hasProp(_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].splitWords, t, true)) {\r\n        return getValue(_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].splitWords, t, true)\r\n    }\r\n    // console.log(t)\r\n    var m = t.match(wordsReg)\r\n    if (m) {\r\n        var arr = []\r\n        var index = m.index\r\n        var word = m[0]\r\n        var last = \"\"\r\n        if (word == t) {\r\n            return arr.concat([word])\r\n        } else {\r\n            if (index == 0) {\r\n                arr.push(word);\r\n                last = t.slice(word.length)\r\n            } else {\r\n                arr.push(t.slice(0, index))\r\n                last = t.slice(index)\r\n            }\r\n            return arr.concat(splitWords(last))\r\n        }\r\n    }\r\n    return [t]\r\n}\r\n\r\n//首字母大写\r\nfunction firstCapital(t) {\r\n    return t.slice(0, 1).toUpperCase() + t.slice(1)\r\n}\r\n\r\n//小驼峰\r\nfunction camelCase(ggname) {\r\n    if (!ggname) return \"\"\r\n    if (_config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].camelCase) {\r\n        let _gg = _config__WEBPACK_IMPORTED_MODULE_0__[\"default\"].camelCase.filter(t => t.toLowerCase() == ggname.toLowerCase())[0]\r\n        if (_gg) {\r\n            return _gg\r\n        }\r\n    }\r\n    return splitWords(ggname).map((t, i) => {\r\n        if (i == 0) {\r\n            return t.slice(0, 1).toLowerCase() + t.slice(1)\r\n        }\r\n        return t.slice(0, 1).toUpperCase() + t.slice(1)\r\n    }).join(\"\")\r\n}\r\n\r\n//中划线 短横\r\nfunction kebab(ggname) {\r\n    return splitWords(ggname.toLowerCase()).join(\"-\")\r\n}\r\n\r\n\n\n//# sourceURL=webpack:///./src/utils.js?");

/***/ })

/******/ });